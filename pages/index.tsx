import Styles from '../Styles/Home.module.scss';
// NextJs Stuff
import { useRef, useState } from 'react';
import type { NextPage } from 'next'
import Head from 'next/head'
import dynamic from 'next/dynamic';
import { Terminal as Term } from 'xterm';
// TODO: Remove This Compiler Stuff and make it run a configurable
// TODO: wasm script based on a bash script or something
import Lua from '../Logic/Compilers/Lua';
// Resize Components
import {
  ReflexContainer,
  ReflexSplitter,
  ReflexElement
} from 'react-reflex';
import 'react-reflex/Styles.css';
// ViewPort Components
const Terminal = dynamic(() => import('../components/Terminal'), {
  ssr: false
});
import Editor from '../components/Editor';
import Viewer from '../components/Viewer';
// Home Layout
const Home: NextPage = () => {
  const [ scene, setScene ] = useState<THREE.Object3D[]>([]);
  const editorRef = useRef(null);
  // Logic
  const onCommand = async (terminal: Term, command: string) => {
    switch (command) {
      case 'help':
        terminal.writeln('\t- help\t\t- Shows Help Info');
        terminal.writeln('\t- clear\t\t- Clears Terminal');
        terminal.writeln('\t- run\t\t- Runs The Script And Generates A Model');
        break;
      case 'clear':
        terminal.clear();
        break;
      case 'run':
        // Runs The Compiler
        // TODO: Make typesafe
        //@ts-ignore
        const value = editorRef.current.editorRef.getValue();
        await Lua(value, terminal, setScene)
        break;
      default:
        console.log(command);
        break;
    }
  };
  // Ui
  return (
    <div className={Styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* View Layout */}
      <ReflexContainer orientation="vertical">
        <ReflexElement className="left-pane">
          {/* Editor Side */}
          <div className={Styles.paneContent}>
            {/* Future Top Bar */}
            {/* Editor And Terminal */}
            <ReflexContainer orientation="horizontal">
              <ReflexElement className="left-pane">
                {/* Editor Side */}
                <div className={Styles.paneContent}>
                  <Editor ref={editorRef} />
                </div>
              </ReflexElement>
              <ReflexSplitter/>
              <ReflexElement className="right-pane">
                {/* Viewer Side */}
                <div className={Styles.paneContent}>
                  <Terminal onCommand={onCommand}/>
                </div>
              </ReflexElement>
            </ReflexContainer>
          </div>
        </ReflexElement>
        <ReflexSplitter/>
        <ReflexElement className="right-pane">
          {/* Viewer Side */}
          <div className={Styles.paneContent}>
            <Viewer scene={scene}/>
          </div>
        </ReflexElement>
      </ReflexContainer>
    </div>
  )
}

export default Home
